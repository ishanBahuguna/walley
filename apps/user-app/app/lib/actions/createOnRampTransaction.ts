"use server";

import prisma from "@repo/db/client";
import { getServerSession } from "next-auth";
import { authOptions } from "../auth";

export async function createOnRampTransactions(
  amount: number,
  provider: string
) {
  try {
    const session = await getServerSession(authOptions);
    const userId:number = Number(session.user.id);

    // token is send by bank before the happening of transaction so the bank may know that someone who is comming is a verified user 
    // Actually the token should be generated by separate backend server of bank by a fetch req 
    const token = Math.random().toString();
    if(!userId) {
        return {
            message : "User not logged in"
        }
    }

    await prisma.onRampTransaction.create({
        data: {
            userId,
            amount,
            provider,
            status:"Processing",
            startTime:new Date(),
            token
        }
    })


    return {
        succes:true,
        message :"On ramp transaction added"
    }
  } catch (e) {
    return {
        message:"OnRamp Transaction failed"
    }
  }
}
